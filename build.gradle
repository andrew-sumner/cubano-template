apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	maven { url "https://jitpack.io" }
	mavenCentral()
}

dependencies {
	// This uses Jitpack to build and import multiple modules from Github
	testCompile 'com.github.concordion:cubano:firefoxFrames-SNAPSHOT'
	// testCompile 'com.github.concordion:cubano:master-SNAPSHOT'
	// testCompile 'com.github.concordion:cubano:cubano-0.1.4'
    
	
	testCompile 'org.codejargon:fluentjdbc:1.6'

	// TODO - we can't redistribute this
    testCompile files('libs/ojdbc7.jar')
    
//    testCompile 'commons-beanutils:commons-beanutils:1.9.2'
    	
	// Find Bugs Annotations
//	testCompile 'net.sourceforge.findbugs:annotations:1.3.2'
}

/*
checkstyle {
    ignoreFailures = true
    configDir = new File("${rootDir}/config/checkstyle")
}
*/

findbugs {
	toolVersion = "3.0.1"
	ignoreFailures = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'

    // To download through proxy, need to update <project root>\gradle\wrapper\gradle-wrapper.properties and change 
    //		distributionUrl property from https... to http...
    // and uncomment follow line    
    // distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-bin.zip"
}

// need utf-8 to get text with non-standard chars e.g. curly apostrophes used correctly 
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
	exclude '**/demo/*.*'
    	 
    // need utf-8 to get text with non-standard chars e.g. apostrophes comparing successfully 
    // systemProperty 'file.encoding', 'UTF-8'

    // Logback Configuration
    if (System.getProperty('logback.configurationFile') != null) systemProperty 'logback.configurationFile', System.getProperty('logback.configurationFile')
        
    // Parallel Runner
	if (System.getProperty('concordion.run.threadCount') != null) {
		systemProperty 'concordion.extensions', 'org.concordion.ext.ParallelRunExtension'
		systemProperty 'concordion.run.threadCount', System.getProperty('concordion.run.threadCount')
	}
	
    systemProperty 'concordion.output.dir', "$reporting.baseDir/spec"
    outputs.upToDateWhen { false } // ensure the tests run each time, even if no changes to test code
    testLogging.showStandardStreams = true
	testLogging.showExceptions = true
}